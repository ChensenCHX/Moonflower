//扩展欧几里得

//a为除数，b为mod，前提条件，二者互质
int gcd(int a,int b,int &x,int &y)
{
    if(!b)
    {
        x=1,y=0;
        return a;
    }
    int t=gcd(b,a%b,x,y);
    int z=x;
    x=y,y=z-y*(a/b);
    return t;
}

//但是得到的逆元x不一定是正数
//对于ax+by=c
//通解为x’=(c/d)*x+k(b/d)
//     y’=(c/d)*y-k(a/d)
//所以
int t=0;
if(x<0)
    {
        t=-(x/(b))+1;
    }
    cout<<x+t*b<<endl;


//快速幂, 前提条件，mod为质数
//计算a^(p-2)(mod p)

int qpow(int a,int b,int mod)
{
    int res=1;
    while(b)
    {
        if(b&1) res=(ll)res*a%mod;
        a=(ll)a*a%mod;
        b>>=1;
    }
    return res;
}
//一定加long long，b为mod-2，且mod为质数