// 一：线性同余方程
//1：扩展欧几里得算法，同上

//2：中国剩余定理


/*
给定n个m1,m2...mn两两互质，对于任意给定的
n个a，方程组
 x≡a1 (mod m1)
 x≡a2 (mod m2)
 .........
 x≡an (mod mn)
 设m为1-n所有小m相乘，Mi=m/mi
 ti是Miti ≡ 1  (mod m1)的一个解
那么有x=a1*M1*t1+a2*M2*t2+...+an*Mn*tn         
*/

/* 
对于m不两两互质的数
设有x≡a1 (mod m1) x≡a2 (mod m2)
可以转化成
x+k1*m1+a1
x=k2*m2+a2
联立
k1*m1-k2*m2=a2-a1
求解k1’=k1+k*m2/d (d为m1,m2最大公约数)
 (!!!注意对于这种有可变量k的要用k mod这个式子，
如x=(x%t+t)%t;防止值过大)
再把k1'带入求得x=k1*m1+a1+k*(m1*m2)/d
其中已知量k1*m1+a1为新的a'，k*lcm(m1,m2)为m'
*/

ll ex_gcd(ll a,ll b,ll &x,ll &y)
{
    if(!b)
    {
        x=1,y=0;
        return a;
    }
    ll t=ex_gcd(b,a%b,x,y);
    ll z=x;
    x=y;
    y=z-y*(a/b);
    return t;
}

void solve()
{
    n=read();
    bool flag=1;
    ll m1,a1;
    ll m2,a2;
    cin>>m1>>a1;
    for(int i=2;i<=n;i++)
    {

        cin>>m2>>a2;
        ll x,y,d;
        d=ex_gcd(m1,m2,x,y);
        ll t=m2/d;
        if((a2-a1)%d)
        {
            flag=0;
            break;
        }
        x=x*(a2-a1)/d;
        x=(x%t+t)%t;
        a1=m1*x+a1;
        m1=(m1/d*m2);
    }
    ll t=0;
    if(a1<0)
    {
        t=-(a1/m1)+1;
    }
    ll x=a1+t*m1;
    if(flag )cout<<x<<endl;
    else cout<<"-1"<<endl;
}



